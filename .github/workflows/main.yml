name: Deploy docker image to AWS ECR

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest

    steps:

    - name: Check out code
      uses: actions/checkout@v2
      
    - name: "Lint code"
      run: echo "Linting repository"

    - name: "Run unit tests"
      run: echo "Running unit tests"
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: flask-demo
        IMAGE_TAG: myflask
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

- name: Download task definition
run: |
  aws ecs describe-task-definition --task-definition service \
  --query taskDefinition > task-definition.json

- name: CD, Deploy the new image ID in the Amazon ECS task definition
  id: flaskapp-cluster
  uses: aws-actions/flask-ecs-task-definition@v1
  with:
    task-definition: task-definition.json
    container-name: myflask
    image: 635776503252.dkr.ecr.us-east-1.amazonaws.com/flask-demo:myflask

- name: Deploy Amazon ECS task definition
  uses: aws-actions/flask-ecs-task-definition@v1
  with:
    task-definition: ${{ steps.task-def.outputs.task-definition }}
    service: ${{ secrets.ECS_SERVICE }}
    cluster: ${{ secrets.ECS_CLUSTER }}
    wait-for-service-stability: true
